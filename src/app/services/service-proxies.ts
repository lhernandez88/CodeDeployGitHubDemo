/* tslint:disable */
/* eslint-disable */
//----------------------
// <auto-generated>
//     Generated using the NSwag toolchain v13.10.0.0 (NJsonSchema v10.3.2.0 (Newtonsoft.Json v11.0.0.0)) (http://NSwag.org)
// </auto-generated>
//----------------------
// ReSharper disable InconsistentNaming



export class SignUpRequest {
    fullName!: string;
    password!: string;
    confirmationPassword?: string | undefined;
    email!: string;
    birthday!: Date;
    phone?: string | undefined;
    gender!: number;

    init(_data?: any) {
        if (_data) {
            this.fullName = _data["fullName"];
            this.password = _data["password"];
            this.confirmationPassword = _data["confirmationPassword"];
            this.email = _data["email"];
            this.birthday = _data["birthday"] ? new Date(_data["birthday"].toString()) : <any>undefined;
            this.phone = _data["phone"];
            this.gender = _data["gender"];
        }
    }

    static fromJS(data: any): SignUpRequest {
        data = typeof data === 'object' ? data : {};
        let result = new SignUpRequest();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["fullName"] = this.fullName;
        data["password"] = this.password;
        data["confirmationPassword"] = this.confirmationPassword;
        data["email"] = this.email;
        data["birthday"] = this.birthday ? this.birthday.toISOString() : <any>undefined;
        data["phone"] = this.phone;
        data["gender"] = this.gender;
        return data; 
    }
}

export class ApiResponse {
    readonly statusCode?: number;
    readonly customStatusCode?: number;
    readonly message?: string | undefined;

    init(_data?: any) {
        if (_data) {
            (<any>this).statusCode = _data["statusCode"];
            (<any>this).customStatusCode = _data["customStatusCode"];
            (<any>this).message = _data["message"];
        }
    }

    static fromJS(data: any): ApiResponse {
        data = typeof data === 'object' ? data : {};
        let result = new ApiResponse();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["statusCode"] = this.statusCode;
        data["customStatusCode"] = this.customStatusCode;
        data["message"] = this.message;
        return data; 
    }
}

export class LoginRequest {
    email?: string | undefined;
    password?: string | undefined;

    init(_data?: any) {
        if (_data) {
            this.email = _data["email"];
            this.password = _data["password"];
        }
    }

    static fromJS(data: any): LoginRequest {
        data = typeof data === 'object' ? data : {};
        let result = new LoginRequest();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["email"] = this.email;
        data["password"] = this.password;
        return data; 
    }
}

export class UserResponse {
    id?: number;
    birthDate?: Date;
    fullName?: string | undefined;
    identity?: string | undefined;
    genderId?: number;
    gender?: string | undefined;
    email?: string | undefined;
    phone?: string | undefined;
    statusId?: number;
    status?: string | undefined;
    avatar?: string | undefined;
    avatarMimeType?: string | undefined;

    init(_data?: any) {
        if (_data) {
            this.id = _data["id"];
            this.birthDate = _data["birthDate"] ? new Date(_data["birthDate"].toString()) : <any>undefined;
            this.fullName = _data["fullName"];
            this.identity = _data["identity"];
            this.genderId = _data["genderId"];
            this.gender = _data["gender"];
            this.email = _data["email"];
            this.phone = _data["phone"];
            this.statusId = _data["statusId"];
            this.status = _data["status"];
            this.avatar = _data["avatar"];
            this.avatarMimeType = _data["avatarMimeType"];
        }
    }

    static fromJS(data: any): UserResponse {
        data = typeof data === 'object' ? data : {};
        let result = new UserResponse();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["id"] = this.id;
        data["birthDate"] = this.birthDate ? this.birthDate.toISOString() : <any>undefined;
        data["fullName"] = this.fullName;
        data["identity"] = this.identity;
        data["genderId"] = this.genderId;
        data["gender"] = this.gender;
        data["email"] = this.email;
        data["phone"] = this.phone;
        data["statusId"] = this.statusId;
        data["status"] = this.status;
        data["avatar"] = this.avatar;
        data["avatarMimeType"] = this.avatarMimeType;
        return data; 
    }
}

export class RefreshTokenRequest {
    token?: string | undefined;
    refreshToken?: string | undefined;

    init(_data?: any) {
        if (_data) {
            this.token = _data["token"];
            this.refreshToken = _data["refreshToken"];
        }
    }

    static fromJS(data: any): RefreshTokenRequest {
        data = typeof data === 'object' ? data : {};
        let result = new RefreshTokenRequest();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["token"] = this.token;
        data["refreshToken"] = this.refreshToken;
        return data; 
    }
}

export class ChangePasswordRequest {
    oldPassword?: string | undefined;
    newPassword?: string | undefined;
    confirmPassword?: string | undefined;

    init(_data?: any) {
        if (_data) {
            this.oldPassword = _data["oldPassword"];
            this.newPassword = _data["newPassword"];
            this.confirmPassword = _data["confirmPassword"];
        }
    }

    static fromJS(data: any): ChangePasswordRequest {
        data = typeof data === 'object' ? data : {};
        let result = new ChangePasswordRequest();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["oldPassword"] = this.oldPassword;
        data["newPassword"] = this.newPassword;
        data["confirmPassword"] = this.confirmPassword;
        return data; 
    }
}

export class UpdateProfileRequest {
    fullName!: string;
    gender!: number;
    birthday!: Date;
    phone?: string | undefined;

    init(_data?: any) {
        if (_data) {
            this.fullName = _data["fullName"];
            this.gender = _data["gender"];
            this.birthday = _data["birthday"] ? new Date(_data["birthday"].toString()) : <any>undefined;
            this.phone = _data["phone"];
        }
    }

    static fromJS(data: any): UpdateProfileRequest {
        data = typeof data === 'object' ? data : {};
        let result = new UpdateProfileRequest();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["fullName"] = this.fullName;
        data["gender"] = this.gender;
        data["birthday"] = this.birthday ? this.birthday.toISOString() : <any>undefined;
        data["phone"] = this.phone;
        return data; 
    }
}

export class ValidateTokenRequest {
    token?: string | undefined;

    init(_data?: any) {
        if (_data) {
            this.token = _data["token"];
        }
    }

    static fromJS(data: any): ValidateTokenRequest {
        data = typeof data === 'object' ? data : {};
        let result = new ValidateTokenRequest();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["token"] = this.token;
        return data; 
    }
}

export class ChangeAccountStatusRequest {
    identity!: string;
    active!: boolean;

    init(_data?: any) {
        if (_data) {
            this.identity = _data["identity"];
            this.active = _data["active"];
        }
    }

    static fromJS(data: any): ChangeAccountStatusRequest {
        data = typeof data === 'object' ? data : {};
        let result = new ChangeAccountStatusRequest();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["identity"] = this.identity;
        data["active"] = this.active;
        return data; 
    }
}

export class SettingRequest {
    key?: string | undefined;
    value?: string | undefined;

    init(_data?: any) {
        if (_data) {
            this.key = _data["key"];
            this.value = _data["value"];
        }
    }

    static fromJS(data: any): SettingRequest {
        data = typeof data === 'object' ? data : {};
        let result = new SettingRequest();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["key"] = this.key;
        data["value"] = this.value;
        return data; 
    }
}

export interface FileParameter {
    data: any;
    fileName: string;
}